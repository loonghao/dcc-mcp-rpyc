name: MR Checks
on: [ pull_request ]

jobs:
  python-check:
    strategy:
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          - os: macos-latest
            python-version: '3.7'
          - os: ubuntu-latest
            python-version: '3.7'
          - os: windows-latest
            python-version: '3.7'
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/pyproject.toml'

      # Cache Poetry dependencies
      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ matrix.python-version }}-

      # Cache nox environments
      - name: Cache nox environments
        uses: actions/cache@v4
        with:
          path: .nox
          key: ${{ runner.os }}-nox-${{ matrix.python-version }}-${{ hashFiles('**/noxfile.py') }}
          restore-keys: |
            ${{ runner.os }}-nox-${{ matrix.python-version }}-

      # Install dependencies (Python >= 3.8)
      - name: Install dependencies (Python >= 3.8)
        if: matrix.python-version != '3.7'
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          uvx poetry lock
          uvx poetry install

      # Special handling for Python 3.7
      - name: Install dependencies (Python 3.7)
        if: matrix.python-version == '3.7'
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry lock
          poetry install

      # Run lint
      - name: Lint (Python >= 3.8)
        if: matrix.python-version != '3.7'
        run: |
          uvx nox -s lint

      # Special handling for Python 3.7
      - name: Lint (Python 3.7)
        if: matrix.python-version == '3.7'
        run: |
          python -m pip install nox
          nox -s lint

      - name: Test (Python >= 3.8)
        if: matrix.python-version != '3.7'
        run: |
          uvx nox -s pytest

      # Special handling for Python 3.7
      - name: Test (Python 3.7)
        if: matrix.python-version == '3.7'
        run: |
          nox -s pytest
